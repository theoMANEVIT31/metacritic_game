openapi: 3.0.1
info:
  description: "MetaCritic"
  version: "1.0.6"
  title: "Projet final"

tags:
  - name: "MetaCritic"
    description: "gestion des Critics liees aux reviews"

paths:
  /reviews:
    get:
      tags:
        - Reviews
      summary: get all reviews
      description: Returns all the reviews mayde by editors
      operationId: "getReviews" 
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Reviews'

    post:
      tags:
        - Reviews
      summary: Add review
      description: Add review
      operationId: "addReview" 
      requestBody:
        $ref: '#/components/requestBodies/Review'
      responses:
        '200':
          description: review response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Reviews'

    put:
      tags:
        - Reviews
      summary: Update review by id
      description: Update a review by his id
      operationId: "updateReview" 
      requestBody:
        $ref: '#/components/requestBodies/Review'
      responses:
        '200':
          description: review response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Reviews'

  /reviews/{id}:
    get:
      tags:
        - Reviews
      summary: Get review by id
      description: Returns a review by his id
      operationId: "getreviewById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: review response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Reviews'
                 
    delete:
      tags:
        - Reviews
      summary: Delete review by id
      description: Delete a review by his id
      operationId: "DeleteReviewById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: review response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Reviews'
  
  /criticsEditors:
    get:
      tags:
        - Critics Editor
      summary: get all Critics from editors
      description: Returns all the Critics mayde by editors
      operationId: "getCriticsEditor" 
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsEditors'

    post:
      tags:
        - Critics Editor
      summary: Add Critic
      description: Add Critic by a editor
      operationId: "addCriticEditor" 
      requestBody:
        $ref: '#/components/requestBodies/CriticsEditor'
      responses:
        '200':
          description: criticsEditors response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsEditors'

    put:
      tags:
        - Critics Editor
      summary: Update Critics by id
      description: Update a Critic made by a editor by his id
      operationId: "updateCriticE" 
      requestBody:
        $ref: '#/components/requestBodies/CriticsEditor'
      responses:
        '200':
          description: rentals response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsEditors'

  /criticsEditors/{id}:
    get:
      tags:
        - Critics Editor
      summary: Get Critic by id
      description: Returns a Critic made by a editor by his id 
      operationId: "getCriticEditorById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: criticsEditors response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsEditors'
                 
    delete:
      tags:
        - Critics Editor
      summary: Delete Critic by id
      description: Delete a Critic made by a editor by his id
      operationId: "DeleteCriticEditorById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: criticsEditors response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsEditors'
  
  /criticsUsers:
    get:
      tags:
        - Critics User
      summary: get all Critics from user
      description: Returns all the Critics mayde by user
      operationId: "getCriticsUsers" 
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsUsers'

    post:
      tags:
        - Critics User
      summary: Add Critic
      description: Add Critic by a user
      operationId: "addCriticUser" 
      requestBody:
        $ref: '#/components/requestBodies/CriticsUser'
      responses:
        '200':
          description: criticsUsers response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsUsers'

    put:
      tags:
        - Critics User
      summary: Update Critics by id
      description: Update a Critic made by a user by his id
      operationId: "updateCriticUser" 
      requestBody:
        $ref: '#/components/requestBodies/CriticsUser'
      responses:
        '200':
          description: criticsUsers response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsUsers'

  /criticsUsers/{id}:
    get:
      tags:
        - Critics User
      summary: Get Critic by id
      description: Returns a Critic made by a user by his id 
      operationId: "getCriticUserById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: criticsUsers response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsUsers'
                 
                 
    delete:
      tags:
        - Critics User
      summary: Delete Critic by id
      description: Delete a Critic made by a user by his id
      operationId: "DeleteCriticUserById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: criticsUsers response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/CriticsUsers'

  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Returns all users
      operationId: "getUsers" 
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Users'

    post:
      tags:
        - Users
      summary: Add user
      description: Add user
      operationId: "addUser" 
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '200':
          description: users response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Users'

    put:
      tags:
        - Users
      summary: Update user by id
      description: Update a user by his id
      operationId: "updateUser"
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '200':
          description: users response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Users'

  /users/{id}:
    delete:
      tags:
        - Users
      summary: Delete user by id
      description: Delete a user by his id
      operationId: "DeleteUserById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: users response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Users'

    get:
      tags:
        - Users
      summary: Get user by id
      description: Returns a user by id
      operationId: "getUserById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: users response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Users'

  /editors:
    get:
      tags:
        - Editors
      summary: Get all editors
      description: Returns all editors
      operationId: "getEditors" 
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Editors'

    post:
      tags:
        - Editors
      summary: Add editor
      description: Add editor
      operationId: "addEditor" 
      requestBody:
        $ref: '#/components/requestBodies/Editor'
      responses:
        '200':
          description: editors response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Editors'

    put:
      tags:
        - Editors
      summary: Update editor by id
      description: Update a editor by his id
      operationId: "updateEditor"
      requestBody:
        $ref: '#/components/requestBodies/Editor'
      responses:
        '200':
          description: editors response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Editors'

  /editors/{id}:
    delete:
      tags:
        - Editors
      summary: Delete editor by id
      description: Delete a editor by his id
      operationId: "DeleteEditorById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: editors response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Editors'

    get:
      tags:
        - Editors
      summary: Get user by id
      description: Returns a user by id
      operationId: "getEditorById" 
      parameters:
        - $ref: '#/components/parameters/idInPath'
      responses:
        '200':
          description: editors response
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Editors'

      


components:
  parameters:
    idInPath:
      required: true
      name: id
      in: path
      schema:
        type: integer
    
  requestBodies:
    Review:
      description: A JSON object containing a review
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/examples/Reviews'
    
    CriticsEditor:
      description: A JSON object containing a critic from an editor
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/examples/CriticsEditors'

    CriticsUser:
      description: A JSON object containing a critic from an user
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/examples/CriticsUsers'

    Editor:
      description: A JSON object containing an editor
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/examples/Editors'
    
    User:
      description: A JSON object containing an user
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/examples/Users'

  schemas:
    Reviews:
      type: object
      properties:
        idR:
          type: integer
          format: int64
          example: 1
        noteE:
          type: integer
          format: int64
          example: 4
        noteU:
          type: integer
          format: int64
          example: 5       
        description:
          type: string
          example: bon jeu 
        titre:
          type: string
          example: the hobbit
        date:
          type: string
          example: 11/02/2002
        idC:
          type: integer
          format: int64
          example: 1

    CriticsEditors:
      type: object
      properties:
        idC:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: il est bon
        idE:
          type: integer
          format: int64
          example: 3

    CriticsUsers:
      type: object
      properties:
        idR:
          type: integer
          format: int64
          example: 1
        idU:
          type: integer
          format: int64
          example: 3
        description:
          type: string
          example: il est pas bon

    Users:
      type: object
      properties:
        idU:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: Oui
        hashedPassword:
          type: string
          example: $2b$10$t7oxiwchWGHa/B9w0AzrYO2WH2rQbA86YSuQjSTmwIrpC/0ZXN7V2
        email:
          type: string
          example: johnDoe@gmail.com
        
    Editors:
      type: object
      properties:
        idE:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: Non

  examples:
    Reviews:
      summary: An example of a review
      value:
        idR: 1
        noteE: 15
        noteU: 10
        description: "très bon jeu"
        titre: "Persona 5"
        date: "11-02-2002"
        idC: 2

    CriticsEditors:
      summary: An example of a Critic made by a editor
      value:
        idC: 2
        description: "bonne maniabilité"
        idE: 3

    CriticsUsers:
      summary: An example of a Critic made by a user
      value:
        idR: 2
        idU: 3
        description: "mauvaise maniabilité"

    Users:
      summary: An example of a user
      value:
        idU: 3
        name: "SoloLeveling"

    Editors:
      summary: An example of a editor
      value:
        idE: 3
        name: "TheGreatReview"



